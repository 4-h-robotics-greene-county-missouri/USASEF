' Gambas class file

PUBLIC SUB _new()

END

PUBLIC SUB Form_Open()

btnStart_Click()

END

PUBLIC SUB messageOut(msg AS String)
  
  lstDataBox.Add(msg)
  IF lstDataBox.Count > 5 THEN 
    lstDataBox.Remove(0)
  ENDIF
   
  
END

PUBLIC SUB sock_Read()

  DIM packetType AS String
  DIM FullMessage AS String
  DIM radCountStr AS String
  DIM radCount AS Float
  
  READ #sock, FullMessage, Lof(sock)
  
  packetType = Left(FullMessage, 1)
  
  IF packetType = "d" THEN
     messageOut(FullMessage)
     graphVolt(FullMessage) 
  ELSE 
    packetType = Left(FullMessage, 7)
    IF packetType = "# Micro" THEN
       messageOut(FullMessage)
       radCountStr = Mid$(FullMessage, 27)
       radCount = Val(radCountStr)
       graphRad(radCount)
    ELSE 
        packetType = Left(FullMessage, 1)
        IF packetType = "#" THEN
          messageOut(FullMessage)
        ENDIF 
    ENDIF 
  ENDIF 

END

PUBLIC SUB sock_Error()
  
  btnStart.Text = "Start !"
  portBox.Enabled = TRUE
  SELECT CASE sock.Status
    CASE Net.CannotBindSocket
      Message.Error(("Unable to Bind to that port"))
    CASE Net.CannotCreateSocket
      Message.Error(("System does not allow to create a socket"))
    CASE Net.CannotRead
      Message.Error(("Error Sending Data"))
    CASE Net.CannotWrite
      Message.Error(("Error Receiving Data"))
  END SELECT
  
END

PUBLIC SUB btnStart_Click()

  IF sock.Status <= Net.Inactive THEN
    sock.Bind(Val(portBox.Text))
    IF sock.Status = Net.Active THEN
      btnStart.Text = ("Stop")
      portBox.Enabled = FALSE
    END IF
  ELSE
    CLOSE #sock
    btnStart.Text = ("Start !")
    portBox.Enabled = TRUE
  END IF    
  
END

PUBLIC SUB UDPsend(Request AS String)
  
  sock.Broadcast = TRUE
  sock.TargetPort = Val(txtDestPort.Text)
  sock.TargetHost = txtDestHost.Text
  WRITE #sock, Request, Len(Request)
  
END

PUBLIC SUB reqMBat_Click()

  UDPsend("s0")

END

PUBLIC SUB reqABat_Click()

    UDPsend("s1")

END

PUBLIC SUB reqUsense_Click()

    UDPsend("s2")

END

PUBLIC SUB reqBSense_Click()

    UDPsend("s3")

END

PUBLIC SUB Timer1_Timer()

  UDPsend("s0")
  UDPsend("s1")
  UDPsend("s2")
  UDPsend("s3")

END

PUBLIC SUB graphVolt(inputText AS String)
  
  DIM volt AS String
  DIM id AS String
  
  DIM voltVal AS Float 
  
  id = Mid$(inputText, 2, 1)
  volt = Mid$(inputText, 4)
  
  voltVal = Val(volt)
  
  IF id = "0" THEN 
    LCDMotBat.Value = voltVal
    voltVal = voltVal / 6.6
    pbrMotorBat.Value = voltVal
  ENDIF 
  
  IF id = "1" THEN 
    LCDArdBat.Value = voltVal
    voltVal = voltVal / 9.0
    pbrArduinoBat.Value = voltVal 
  ENDIF 
  
  IF id = "2" THEN 
  ultrasonicGraph(voltVal)
  ENDIF 
  
  IF id = "2" THEN 
  bumperGraph(voltVal)
  ENDIF 
  
END 

PUBLIC SUB graphRad(radValue AS Float)
  
  LCDuRPM.Value = radValue
  DialuRPM.Value = radValue * 10 
  
END

PUBLIC SUB ultrasonicGraph(distance AS Float)
  
ultrasonicBox.Text = distance
  
END

PUBLIC SUB bumperGraph(bumper AS Integer)
  
 IF bumper = 1 THEN 
 chkbxBumper = FALSE
 ELSE 
 chkbxBumper = TRUE
 ENDIF 
  
END
